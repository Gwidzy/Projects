
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

// Based on the dates of the projects and where the employees are working, they shouldn't be able to pick that employee if they are already busy with it.
// Set the start and end date as the current date to prevent errors when checking the availability for employees for workers. 
public class ManageProjects extends javax.swing.JFrame {

    /**
     * Creates new form ManageEmployee
     */
    public ManageProjects() {
        initComponents();
        show_Projects();
        activeProjectsPanel.setVisible(false);
        newProjectPanel.setVisible(false);
        searchProjectPanel.setVisible(false);
        //showDefaultValue();
    }
    boolean viewProj = false;
    boolean projActive = false;
    boolean activeSearch = false;
    ResultSet rs;
    Connection con;
    Statement stmnt;

    public ArrayList<Project> projectList() {
        ArrayList<Project> projectsList = new ArrayList<>();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // making a connection with the mysql database
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/chopGui?useSSL=false", "root", "andrew01");
            stmnt = con.createStatement();
            String query1 = "SELECT * FROM Project";
            ResultSet rs = stmnt.executeQuery(query1);

            Project projects;
            //, rs.getString("projDesc")
            while (rs.next()) {
                projects = new Project(rs.getInt("projID"), rs.getString("projName"), rs.getString("projName"), rs.getString("projStartDate"), rs.getString("projEndDate"));
                projectsList.add(projects);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error " + e);
        }
        return projectsList;
    }

    public void show_Projects() {
        ArrayList<Project> list = projectList();
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[6];

        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getProjID();
            row[1] = list.get(i).getProjName();
            row[2] = list.get(i).getEmpName();
            // row[3] = list.get(i).getProjDesc();
            row[3] = list.get(i).getProjStartDate();
            row[4] = list.get(i).getProjEndDate();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        viewProjectButton = new javax.swing.JButton();
        addProjectButton = new javax.swing.JButton();
        activeProjectsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        activeProjClientName = new javax.swing.JTextField();
        activeProjContactPerson = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        activeProjStartDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        activeProjEndDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        activeProjEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        activeProjVatRegNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        activeProjContactNo = new javax.swing.JTextField();
        deleteProjRecord = new javax.swing.JButton();
        activeProjName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        newProjectPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        projClientName = new javax.swing.JTextField();
        projContactPerson = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        clientEmail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        vatRegNo = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        clientCont = new javax.swing.JTextField();
        projName = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        addProject = new javax.swing.JButton();
        cancelNewProject = new javax.swing.JButton();
        startDateYear = new javax.swing.JTextField();
        startDateMonth = new javax.swing.JTextField();
        startDateDay = new javax.swing.JTextField();
        endDateDay = new javax.swing.JTextField();
        endDateMonth = new javax.swing.JTextField();
        endDateYear = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        searchProjectPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        projSearchText = new javax.swing.JTextField();
        searchProjBtn = new javax.swing.JButton();
        resetSearch = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();

        jButton4.setText("Home");
        jButton4.setName("btnHome"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 720));
        setSize(new java.awt.Dimension(1200, 720));
        getContentPane().setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "projID", "projName", "empName", "projStartDate", "projEndDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(260, 110, 699, 216);

        viewProjectButton.setText("View");
        viewProjectButton.setName("btnProjectView"); // NOI18N
        viewProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProjectButtonActionPerformed(evt);
            }
        });
        getContentPane().add(viewProjectButton);
        viewProjectButton.setBounds(290, 330, 58, 32);

        addProjectButton.setText("Add");
        addProjectButton.setName("btnAdd"); // NOI18N
        addProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProjectButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addProjectButton);
        addProjectButton.setBounds(360, 330, 52, 32);

        activeProjectsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Active Projects", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 24))); // NOI18N
        activeProjectsPanel.setMinimumSize(new java.awt.Dimension(527, 288));
        activeProjectsPanel.setName("pnlActive"); // NOI18N
        activeProjectsPanel.setPreferredSize(new java.awt.Dimension(527, 288));
        activeProjectsPanel.setLayout(null);

        jLabel1.setText("Client Name:");
        jLabel1.setName("lblClientName"); // NOI18N
        activeProjectsPanel.add(jLabel1);
        jLabel1.setBounds(217, 42, 100, 16);

        activeProjClientName.setName("tfieldClientName"); // NOI18N
        activeProjectsPanel.add(activeProjClientName);
        activeProjClientName.setBounds(217, 62, 100, 24);

        activeProjContactPerson.setName("tFieldtext\tContactPerson"); // NOI18N
        activeProjContactPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeProjContactPersonActionPerformed(evt);
            }
        });
        activeProjectsPanel.add(activeProjContactPerson);
        activeProjContactPerson.setBounds(58, 113, 100, 24);

        jLabel2.setText("Contact Person:");
        jLabel2.setName("text\tlblContactPerson"); // NOI18N
        activeProjectsPanel.add(jLabel2);
        jLabel2.setBounds(58, 93, 100, 16);
        activeProjectsPanel.add(activeProjStartDate);
        activeProjStartDate.setBounds(58, 164, 100, 24);

        jLabel3.setText("Start Date:");
        activeProjectsPanel.add(jLabel3);
        jLabel3.setBounds(58, 144, 100, 16);
        activeProjectsPanel.add(activeProjEndDate);
        activeProjEndDate.setBounds(217, 164, 100, 24);

        jLabel4.setText("End Date:");
        activeProjectsPanel.add(jLabel4);
        jLabel4.setBounds(217, 144, 100, 16);
        activeProjectsPanel.add(activeProjEmail);
        activeProjEmail.setBounds(217, 113, 100, 24);

        jLabel5.setText("Email:");
        activeProjectsPanel.add(jLabel5);
        jLabel5.setBounds(217, 93, 100, 16);
        activeProjectsPanel.add(activeProjVatRegNo);
        activeProjVatRegNo.setBounds(369, 62, 100, 24);

        jLabel6.setText("VAT Reg No:");
        jLabel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel6jpanel3(evt);
            }
        });
        activeProjectsPanel.add(jLabel6);
        jLabel6.setBounds(369, 42, 100, 16);

        jLabel8.setText("Contact No:");
        activeProjectsPanel.add(jLabel8);
        jLabel8.setBounds(369, 93, 100, 16);
        activeProjectsPanel.add(activeProjContactNo);
        activeProjContactNo.setBounds(369, 113, 100, 24);

        deleteProjRecord.setText("Delete");
        deleteProjRecord.setName("btnProjectDelete"); // NOI18N
        deleteProjRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProjRecordActionPerformed(evt);
            }
        });
        activeProjectsPanel.add(deleteProjRecord);
        deleteProjRecord.setBounds(350, 220, 80, 32);
        activeProjectsPanel.add(activeProjName);
        activeProjName.setBounds(58, 62, 100, 24);

        jLabel7.setText("Project Name:");
        activeProjectsPanel.add(jLabel7);
        jLabel7.setBounds(58, 42, 100, 16);

        getContentPane().add(activeProjectsPanel);
        activeProjectsPanel.setBounds(80, 360, 520, 290);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 10, 0, 0);

        jPanel5.setBackground(new java.awt.Color(0, 204, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 831, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(180, 80, 831, 15);
        getContentPane().add(jLabel18);
        jLabel18.setBounds(180, 30, 0, 0);
        getContentPane().add(jLabel20);
        jLabel20.setBounds(0, 0, 0, 720);

        newProjectPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Project", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 24))); // NOI18N
        newProjectPanel.setMinimumSize(new java.awt.Dimension(527, 288));
        newProjectPanel.setPreferredSize(new java.awt.Dimension(527, 288));
        newProjectPanel.setLayout(null);

        jLabel11.setText("Client Name:");
        jLabel11.setName("lblClientName"); // NOI18N
        newProjectPanel.add(jLabel11);
        jLabel11.setBounds(184, 66, 100, 16);

        projClientName.setName("tfieldClientName"); // NOI18N
        newProjectPanel.add(projClientName);
        projClientName.setBounds(184, 86, 100, 24);

        projContactPerson.setName("tFieldtext\tContactPerson"); // NOI18N
        projContactPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projContactPersonActionPerformed(evt);
            }
        });
        newProjectPanel.add(projContactPerson);
        projContactPerson.setBounds(25, 137, 100, 24);

        jLabel12.setText("Contact Person:");
        jLabel12.setName("text\tlblContactPerson"); // NOI18N
        newProjectPanel.add(jLabel12);
        jLabel12.setBounds(25, 117, 100, 16);

        jLabel13.setText("Start Date:");
        newProjectPanel.add(jLabel13);
        jLabel13.setBounds(25, 168, 100, 16);

        jLabel14.setText("End Date:");
        newProjectPanel.add(jLabel14);
        jLabel14.setBounds(280, 170, 100, 16);
        newProjectPanel.add(clientEmail);
        clientEmail.setBounds(184, 137, 100, 24);

        jLabel15.setText("Email:");
        newProjectPanel.add(jLabel15);
        jLabel15.setBounds(184, 117, 100, 16);
        newProjectPanel.add(vatRegNo);
        vatRegNo.setBounds(354, 86, 100, 24);

        jLabel16.setText("VAT Reg No:");
        newProjectPanel.add(jLabel16);
        jLabel16.setBounds(354, 66, 100, 16);

        jLabel17.setText("Contact No:");
        newProjectPanel.add(jLabel17);
        jLabel17.setBounds(354, 117, 100, 16);
        newProjectPanel.add(clientCont);
        clientCont.setBounds(354, 137, 100, 24);
        newProjectPanel.add(projName);
        projName.setBounds(25, 86, 100, 24);

        jLabel19.setText("Project Name:");
        newProjectPanel.add(jLabel19);
        jLabel19.setBounds(25, 66, 100, 16);

        addProject.setText("Add");
        addProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProjectActionPerformed(evt);
            }
        });
        newProjectPanel.add(addProject);
        addProject.setBounds(25, 226, 52, 32);

        cancelNewProject.setText("Cancel");
        cancelNewProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelNewProjectActionPerformed(evt);
            }
        });
        newProjectPanel.add(cancelNewProject);
        cancelNewProject.setBounds(94, 226, 80, 32);

        startDateYear.setText("YYYY");
        startDateYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateYearActionPerformed(evt);
            }
        });
        newProjectPanel.add(startDateYear);
        startDateYear.setBounds(110, 190, 50, 24);

        startDateMonth.setText("MM");
        newProjectPanel.add(startDateMonth);
        startDateMonth.setBounds(70, 190, 30, 24);

        startDateDay.setText("DD");
        startDateDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDateDayActionPerformed(evt);
            }
        });
        newProjectPanel.add(startDateDay);
        startDateDay.setBounds(28, 190, 32, 24);

        endDateDay.setText("DD");
        newProjectPanel.add(endDateDay);
        endDateDay.setBounds(280, 190, 40, 24);

        endDateMonth.setText("MM");
        endDateMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endDateMonthActionPerformed(evt);
            }
        });
        newProjectPanel.add(endDateMonth);
        endDateMonth.setBounds(340, 190, 50, 24);

        endDateYear.setText("YYYY");
        newProjectPanel.add(endDateYear);
        endDateYear.setBounds(400, 190, 50, 24);

        getContentPane().add(newProjectPanel);
        newProjectPanel.setBounds(610, 360, 520, 290);

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sticker.png"))); // NOI18N
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel21);
        jLabel21.setBounds(50, 10, 120, 110);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Paragraph@1x.png"))); // NOI18N
        getContentPane().add(jLabel23);
        jLabel23.setBounds(180, 30, 830, 50);

        jPanel1.setBackground(new java.awt.Color(0, 204, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(180, 80, 830, 15);

        jLabel9.setText("Projects Name:");

        projSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projSearchTextActionPerformed(evt);
            }
        });

        searchProjBtn.setText("Search");
        searchProjBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProjBtnActionPerformed(evt);
            }
        });

        resetSearch.setText("Reset");
        resetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchProjectPanelLayout = new javax.swing.GroupLayout(searchProjectPanel);
        searchProjectPanel.setLayout(searchProjectPanelLayout);
        searchProjectPanelLayout.setHorizontalGroup(
            searchProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchProjectPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(searchProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchProjectPanelLayout.createSequentialGroup()
                        .addComponent(searchProjBtn)
                        .addGap(18, 18, 18)
                        .addComponent(resetSearch))
                    .addGroup(searchProjectPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        searchProjectPanelLayout.setVerticalGroup(
            searchProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchProjectPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(projSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchProjectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchProjBtn)
                    .addComponent(resetSearch))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getContentPane().add(searchProjectPanel);
        searchProjectPanel.setBounds(970, 120, 220, 100);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        getContentPane().add(searchButton);
        searchButton.setBounds(430, 330, 71, 32);

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Installation of back up genators at Watershed in Waterfront 5.png"))); // NOI18N
        jLabel22.setText("jLabel5");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(0, 0, 1200, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProjectButtonActionPerformed
        projActive = false;
        if (viewProj == false) {

            newProjectPanel.setVisible(false);
            activeProjectsPanel.setVisible(true);
            viewProj = true;

        } else if (viewProj == true) {
            activeProjectsPanel.setVisible(false);
            viewProj = false;
        }
    }//GEN-LAST:event_viewProjectButtonActionPerformed

    private void addProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProjectButtonActionPerformed
        viewProj = false;
        if (projActive == false) {

            activeProjectsPanel.setVisible(false);
            newProjectPanel.setVisible(true);
            projActive = true;

        } else if (projActive == true) {
            newProjectPanel.setVisible(false);
            projActive = false;
        }

    }//GEN-LAST:event_addProjectButtonActionPerformed

    private void activeProjContactPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeProjContactPersonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activeProjContactPersonActionPerformed

    private void jLabel6jpanel3(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel6jpanel3
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6jpanel3

    private void projContactPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projContactPersonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projContactPersonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        this.dispose();
        Home hme = new Home();
        hme.setVisible(true);
    }//GEN-LAST:event_jLabel21MouseClicked

    public boolean containsSpecialChar(String date) {

        Pattern pattern = Pattern.compile("[^a-zA-Z0-9]");
        Matcher match = pattern.matcher(date);
        boolean isValid = match.find();
        if (isValid) {
            return true;
        } else {
            return false;
        }
    }

    private void addProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProjectActionPerformed
        String startDateDay = this.startDateDay.getText();
        String startDateMonth = this.startDateMonth.getText();
        String startDateYear = this.startDateYear.getText();

        String startDate = startDateYear + "/" + startDateMonth + "/" + startDateDay;
        String startDateWithoutSlash = startDateYear + startDateMonth + startDateDay;

        String endDateDay = this.endDateDay.getText();
        String endDateMonth = this.endDateMonth.getText();
        String endDateYear = this.endDateYear.getText();

        String endDate = endDateYear + "/" + endDateMonth + "/" + endDateDay;
        String endDateWithoutSlash = endDateYear + endDateMonth + endDateDay;

        System.out.println("startDate parsed values: " + startDate);
        System.out.println("endDate parsed values: " + endDate);

        String projName = this.projName.getText();
        String clientName = projClientName.getText();
        String vatRegNo = this.vatRegNo.getText();
        String projContantPerson = projContactPerson.getText();
        String clientEmail = this.clientEmail.getText();
        String clientContactNo = clientCont.getText();

        boolean testForStartDate = containsSpecialChar(startDateWithoutSlash);
        boolean testForEndDate = containsSpecialChar(endDateWithoutSlash);
        int contactNumSize = clientContactNo.length();
        if (!projName.isEmpty() || !clientName.isEmpty() || !vatRegNo.isEmpty() || !projContantPerson.isEmpty() || !clientEmail.isEmpty() || !clientContactNo.isEmpty() || !startDateDay.isEmpty() || !startDateMonth.isEmpty() || !startDateYear.isEmpty() || !endDateDay.isEmpty() || !endDateMonth.isEmpty() || !endDateYear.isEmpty()) { // You can't check if an integer is empty since there isn't a "empty" definition for an int
            if (clientEmail.contains("@") && clientEmail.contains(".")) {
                if (testForStartDate == false && testForEndDate == false) {
                    if (contactNumSize >= 10 && contactNumSize <= 11) {
                        new Database().addNewProject(projName, clientName, vatRegNo, projContantPerson, clientEmail, clientContactNo, startDate, endDate);
                        newProjectPanel.setVisible(false);
                        viewProjPage();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Special characters aren't allowed");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Please enter a valid email address!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please fill in all of the fields before proceeding to add an employee");
        }

    }//GEN-LAST:event_addProjectActionPerformed

    private void cancelNewProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelNewProjectActionPerformed

        this.projName.setText("");
        projClientName.setText("");
        this.vatRegNo.setText("");
        projContactPerson.setText("");
        this.clientEmail.setText("");
        clientCont.setText("");
        startDateDay.setText("");
        startDateMonth.setText("");
        startDateYear.setText("");
        endDateDay.setText("");
        endDateMonth.setText("");
        endDateYear.setText("");
    }//GEN-LAST:event_cancelNewProjectActionPerformed

    public void showDefaultValue() { // show first value that is stored in the table
        String query1 = "SELECT * FROM Project";

        try {
            new Database();
            stmnt = con.prepareStatement(query1);
            rs = stmnt.executeQuery(query1);

            rs.next();
            activeProjName.setText(rs.getString("projName"));
            activeProjStartDate.setText(rs.getString("projStartDate"));
            activeProjEndDate.setText(rs.getString("projEndDate"));
            activeProjClientName.setText(rs.getString("clientName"));
            activeProjContactPerson.setText(rs.getString("clientContact"));
            activeProjVatRegNo.setText(rs.getString("vatRegNo"));
            activeProjContactNo.setText(rs.getString("clientConNum"));
            activeProjEmail.setText(rs.getString("clientEmail"));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error at data retrieve " + e);
        }
    }

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int row = jTable2.getSelectedRow();

        String selectionData = jTable2.getModel().getValueAt(row, 0).toString();
        String query1 = "SELECT * FROM Project WHERE projID = " + selectionData;
        try {
            new Database();
            stmnt = con.prepareStatement(query1);
            rs = stmnt.executeQuery(query1);
            if (rs.next()) {
                activeProjName.setText(rs.getString("projName"));
                activeProjStartDate.setText(rs.getString("projStartDate"));
                activeProjEndDate.setText(rs.getString("projEndDate"));
                activeProjClientName.setText(rs.getString("clientName"));
                activeProjContactPerson.setText(rs.getString("clientContact"));
                activeProjVatRegNo.setText(rs.getString("vatRegNo"));
                activeProjContactNo.setText(rs.getString("clientConNum"));
                activeProjEmail.setText(rs.getString("clientEmail"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error at data retrieve " + e);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void projSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projSearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_projSearchTextActionPerformed

    public ArrayList<Project> projectSearchList() {
        String searchText = projSearchText.getText();
        ArrayList<Project> projectsList = new ArrayList<>();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // making a connection with the mysql database
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/chopGui?useSSL=false", "root", "andrew01");
            stmnt = con.createStatement();
            String query1 = "SELECT * FROM Project WHERE projName LIKE '%" + searchText + "'"
                    + "OR projName LIKE '" + searchText + "%'"
                    + "OR projName LIKE '%" + searchText + "%'";
            ResultSet rs = stmnt.executeQuery(query1);

            Project projects;
            //, rs.getString("projDesc")
            while (rs.next()) {
                projects = new Project(rs.getInt("projID"), rs.getString("projName"), rs.getString("projName"), rs.getString("projStartDate"), rs.getString("projEndDate"));
                projectsList.add(projects);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error " + e);
        }
        return projectsList;
    }

    public void showSearchProject() {
        ArrayList<Project> list = projectSearchList();
        DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[6];

        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getProjID();
            row[1] = list.get(i).getProjName();
            row[2] = list.get(i).getEmpName();
            // row[3] = list.get(i).getProjDesc();
            row[3] = list.get(i).getProjStartDate();
            row[4] = list.get(i).getProjEndDate();
            dtm.addRow(row);
        }
    }


    private void searchProjBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProjBtnActionPerformed
        showSearchProject();
    }//GEN-LAST:event_searchProjBtnActionPerformed

    private void resetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSearchActionPerformed
        projSearchText.setText("");
        show_Projects();
    }//GEN-LAST:event_resetSearchActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if (activeSearch == false) {

            searchProjectPanel.setVisible(true);
            activeSearch = true;

        } else if (activeSearch == true) {
            searchProjectPanel.setVisible(false);
            activeSearch = false;
        }

    }//GEN-LAST:event_searchButtonActionPerformed
    public void viewProjPage() {
        this.dispose();
        ManageProjects mng = new ManageProjects();
        mng.setVisible(true);
    }
    private void deleteProjRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProjRecordActionPerformed
        String projName = activeProjName.getText();
        String projClientName = activeProjClientName.getText();
        String activeProjVatRegNo = this.activeProjVatRegNo.getText();
        String activeProjContactPerson = this.activeProjContactPerson.getText();
        String activeProjEmail = this.activeProjEmail.getText();
        String activeProjContactNo = this.activeProjContactNo.getText();
        String activeProjStartDate = this.activeProjStartDate.getText();
        String activeProjEndDate = this.activeProjEndDate.getText();

        if (!projName.isEmpty() || !projClientName.isEmpty() || !activeProjVatRegNo.isEmpty() || !activeProjContactPerson.isEmpty() || !activeProjEmail.isEmpty() || !activeProjContactNo.isEmpty() || !activeProjStartDate.isEmpty() || !activeProjEndDate.isEmpty()) {
            new Database().deleteProjectRecord(projName);
            viewProjPage();
        }

//        new Database().deleteProjectRecord(projName);
//        viewProjPage();
    }//GEN-LAST:event_deleteProjRecordActionPerformed

    private void startDateYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateYearActionPerformed

    private void startDateDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDateDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startDateDayActionPerformed

    private void endDateMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endDateMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endDateMonthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activeProjClientName;
    private javax.swing.JTextField activeProjContactNo;
    private javax.swing.JTextField activeProjContactPerson;
    private javax.swing.JTextField activeProjEmail;
    private javax.swing.JTextField activeProjEndDate;
    private javax.swing.JTextField activeProjName;
    private javax.swing.JTextField activeProjStartDate;
    private javax.swing.JTextField activeProjVatRegNo;
    private javax.swing.JPanel activeProjectsPanel;
    private javax.swing.JButton addProject;
    private javax.swing.JButton addProjectButton;
    private javax.swing.JButton cancelNewProject;
    private javax.swing.JTextField clientCont;
    private javax.swing.JTextField clientEmail;
    private javax.swing.JButton deleteProjRecord;
    private javax.swing.JTextField endDateDay;
    private javax.swing.JTextField endDateMonth;
    private javax.swing.JTextField endDateYear;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel newProjectPanel;
    private javax.swing.JTextField projClientName;
    private javax.swing.JTextField projContactPerson;
    private javax.swing.JTextField projName;
    private javax.swing.JTextField projSearchText;
    private javax.swing.JButton resetSearch;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchProjBtn;
    private javax.swing.JPanel searchProjectPanel;
    private javax.swing.JTextField startDateDay;
    private javax.swing.JTextField startDateMonth;
    private javax.swing.JTextField startDateYear;
    private javax.swing.JTextField vatRegNo;
    private javax.swing.JButton viewProjectButton;
    // End of variables declaration//GEN-END:variables
}
